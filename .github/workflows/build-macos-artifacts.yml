name: 🍎 Build macOS Production Artifacts

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - web-only
        - macos-only
      release_tag:
        description: 'Release tag (optional)'
        required: false
        type: string

env:
  FLUTTER_VERSION: '3.24.0'
  APP_NAME: 'PomodoroGenie'
  APP_VERSION: '1.0.0'
  BUNDLE_ID: 'com.pomodorogenie.app'

jobs:
  # 🔍 检查代码质量
  quality-check:
    name: 🔍 Code Quality Check
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: 📦 Install dependencies
      run: |
        cd mobile
        flutter pub get
        
    - name: 🔍 Analyze code
      run: |
        cd mobile
        flutter analyze --fatal-infos
        
    - name: 🧪 Run tests
      run: |
        cd mobile
        flutter test --coverage
        
    - name: 📊 Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: mobile/coverage/lcov.info
        flags: flutter
        name: flutter-coverage

  # 🌐 构建Flutter Web应用
  build-web:
    name: 🌐 Build Flutter Web
    runs-on: ubuntu-latest
    needs: quality-check
    if: ${{ github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'web-only' || github.event.inputs.build_type == '' }}
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: 📦 Install dependencies
      run: |
        cd mobile
        flutter pub get
        
    - name: 🔨 Build Flutter Web
      run: |
        cd mobile
        flutter build web --release --web-renderer html --dart-define=FLUTTER_WEB_USE_SKIA=false
        
    - name: 📦 Create Web deployment package
      run: |
        mkdir -p dist/web
        cp -r mobile/build/web/* dist/web/
        
        # 创建部署脚本
        cat > dist/web/deploy.sh << 'EOF'
        #!/bin/bash
        echo "🚀 Deploying PomodoroGenie Web App..."
        echo "📁 Copying files to /Applications/PomodoroGenie/"
        sudo mkdir -p /Applications/PomodoroGenie
        sudo cp -r * /Applications/PomodoroGenie/
        sudo chown -R $(whoami):staff /Applications/PomodoroGenie
        echo "✅ Deployment complete!"
        echo "🌐 Access: http://localhost:3001"
        EOF
        chmod +x dist/web/deploy.sh
        
        # 创建README
        cat > dist/web/README.md << 'EOF'
        # PomodoroGenie Web App
        
        ## 🚀 Quick Start
        
        1. Run deployment script:
           ```bash
           ./deploy.sh
           ```
        
        2. Start the server:
           ```bash
           cd /Applications/PomodoroGenie
           python3 -m http.server 3001 --bind 0.0.0.0
           ```
        
        3. Access the app:
           - Local: http://localhost:3001
           - Network: http://[your-ip]:3001
        
        ## 📋 Features
        
        - ✅ Pomodoro Timer
        - ✅ Task Management
        - ✅ Statistics Dashboard
        - ✅ White Noise
        - ✅ Focus Mode
        EOF
        
    - name: 📤 Upload Web artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-app-${{ github.sha }}
        path: dist/web/
        retention-days: 30

  # 🍎 构建macOS原生应用
  build-macos:
    name: 🍎 Build macOS App
    runs-on: macos-latest
    needs: quality-check
    if: ${{ github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'macos-only' || github.event.inputs.build_type == '' }}
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: 📦 Install dependencies
      run: |
        cd mobile
        flutter pub get
        
    - name: 🔧 Enable macOS desktop
      run: |
        cd mobile
        flutter config --enable-macos-desktop
        
    - name: 🔨 Build macOS app
      run: |
        cd mobile
        flutter build macos --release --dart-define=FLUTTER_WEB_USE_SKIA=false
        
    - name: 📦 Create macOS app package
      run: |
        mkdir -p dist/macos
        APP_PATH="mobile/build/macos/Build/Products/Release/${APP_NAME}.app"
        
        if [ -d "$APP_PATH" ]; then
          cp -r "$APP_PATH" dist/macos/
          
          # 创建DMG
          hdiutil create -volname "${APP_NAME}" \
            -srcfolder dist/macos \
            -ov -format UDZO \
            dist/macos/${APP_NAME}-${APP_VERSION}.dmg
            
          # 创建PKG安装包
          pkgbuild --root dist/macos \
            --identifier ${BUNDLE_ID} \
            --version ${APP_VERSION} \
            --install-location "/Applications" \
            dist/macos/${APP_NAME}-${APP_VERSION}.pkg
            
          # 创建安装说明
          cat > dist/macos/INSTALL.md << 'EOF'
          # PomodoroGenie macOS App Installation
          
          ## 📦 Installation Options
          
          ### Option 1: Direct App Installation
          1. Copy `PomodoroGenie.app` to `/Applications/`
          2. Double-click to run
          
          ### Option 2: DMG Installation
          1. Double-click `PomodoroGenie-1.0.0.dmg`
          2. Drag `PomodoroGenie.app` to Applications folder
          3. Eject the DMG
          
          ### Option 3: PKG Installation
          1. Double-click `PomodoroGenie-1.0.0.pkg`
          2. Follow the installation wizard
          
          ## 🔒 Security Note
          
          If macOS shows a security warning:
          1. Go to System Preferences > Security & Privacy
          2. Click "Open Anyway" for PomodoroGenie
          
          ## 🚀 First Launch
          
          The app will start automatically after installation.
          Access it from Applications folder or Launchpad.
          
          ## 📋 System Requirements
          
          - macOS 10.15 (Catalina) or later
          - 4GB RAM minimum
          - 2GB free disk space
          EOF
          
        else
          echo "❌ macOS app build failed"
          exit 1
        fi
        
    - name: 📤 Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-app-${{ github.sha }}
        path: dist/macos/
        retention-days: 30

  # 🚀 创建发布版本
  create-release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    needs: [build-web, build-macos]
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag != '' }}
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download Web artifacts
      uses: actions/download-artifact@v4
      with:
        name: web-app-${{ github.sha }}
        path: dist/web/
        
    - name: 📥 Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: macos-app-${{ github.sha }}
        path: dist/macos/
        
    - name: 🏷️ Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.release_tag }}
        name: PomodoroGenie ${{ github.event.inputs.release_tag }}
        body: |
          # 🍎 PomodoroGenie Release ${{ github.event.inputs.release_tag }}
          
          ## 📦 Downloads
          
          ### 🌐 Web Application
          - **File**: `web-app-${{ github.sha }}.zip`
          - **Type**: Flutter Web App
          - **Platform**: Cross-platform (Browser)
          
          ### 🍎 macOS Application
          - **File**: `macos-app-${{ github.sha }}.zip`
          - **Type**: Native macOS App
          - **Platform**: macOS 10.15+
          
          ## 🚀 Quick Start
          
          ### Web App
          1. Extract the web-app archive
          2. Run `./deploy.sh`
          3. Access at http://localhost:3001
          
          ### macOS App
          1. Extract the macos-app archive
          2. Follow `INSTALL.md` instructions
          3. Launch from Applications folder
          
          ## 📋 Features
          
          - ✅ Pomodoro Timer
          - ✅ Task Management
          - ✅ Statistics Dashboard
          - ✅ White Noise
          - ✅ Focus Mode
          - ✅ Cross-platform Support
          
          ## 🔧 System Requirements
          
          ### Web App
          - Modern web browser
          - Python 3.7+ (for local server)
          
          ### macOS App
          - macOS 10.15 (Catalina) or later
          - 4GB RAM minimum
          - 2GB free disk space
        files: |
          dist/web/web-app-${{ github.sha }}.zip
          dist/macos/macos-app-${{ github.sha }}.zip
        draft: false
        prerelease: false

  # 📊 构建状态报告
  build-summary:
    name: 📊 Build Summary
    runs-on: ubuntu-latest
    needs: [build-web, build-macos]
    if: always()
    steps:
    - name: 📊 Generate Build Summary
      run: |
        echo "## 🍎 PomodoroGenie Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Build Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type**: ${{ github.event.inputs.build_type || 'all' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 🎯 Build Results" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.build-web.result }}" = "success" ]; then
          echo "✅ **Flutter Web App**: Built successfully" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Flutter Web App**: Build failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.build-macos.result }}" = "success" ]; then
          echo "✅ **macOS App**: Built successfully" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **macOS App**: Build failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "- **Web App**: Available in Actions artifacts" >> $GITHUB_STEP_SUMMARY
        echo "- **macOS App**: Available in Actions artifacts" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 🚀 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Download artifacts from Actions tab" >> $GITHUB_STEP_SUMMARY
        echo "2. Deploy web app using provided scripts" >> $GITHUB_STEP_SUMMARY
        echo "3. Install macOS app following INSTALL.md" >> $GITHUB_STEP_SUMMARY
        echo "4. Test functionality on target systems" >> $GITHUB_STEP_SUMMARY
