name: 🚀 Automated Release Pipeline

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string
      release_notes:
        description: 'Release notes'
        required: false
        type: string
        default: 'Bug fixes and improvements'

env:
  FLUTTER_VERSION: '3.24.0'
  APP_NAME: 'PomodoroGenie'

jobs:
  # 🔍 代码质量检查
  quality-gate:
    name: 🔍 Quality Gate
    runs-on: ubuntu-latest
    outputs:
      quality-passed: ${{ steps.quality-check.outputs.passed }}
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: 📦 Install dependencies
      run: |
        cd mobile
        flutter pub get
        
    - name: 🔍 Code Analysis
      run: |
        cd mobile
        flutter analyze --fatal-infos
        
    - name: 🧪 Run Tests
      run: |
        cd mobile
        flutter test --coverage
        
    - name: 📊 Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        file: mobile/coverage/lcov.info
        flags: flutter
        name: flutter-coverage
        
    - name: ✅ Quality Check Passed
      id: quality-check
      run: echo "passed=true" >> $GITHUB_OUTPUT

  # 🌐 构建Web应用
  build-web:
    name: 🌐 Build Web App
    runs-on: ubuntu-latest
    needs: quality-gate
    if: ${{ needs.quality-gate.outputs.quality-passed == 'true' }}
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: 📦 Install dependencies
      run: |
        cd mobile
        flutter pub get
        
    - name: 🔨 Build Flutter Web
      run: |
        cd mobile
        flutter build web --release --web-renderer html --dart-define=FLUTTER_WEB_USE_SKIA=false
        
    - name: 📦 Create Web Package
      run: |
        mkdir -p release/web
        cp -r mobile/build/web/* release/web/
        
        # 创建部署脚本
        cat > release/web/deploy.sh << 'EOF'
        #!/bin/bash
        echo "🚀 Deploying PomodoroGenie Web App..."
        echo "📁 Copying files to /Applications/PomodoroGenie/"
        
        # 创建应用目录
        sudo mkdir -p /Applications/PomodoroGenie
        sudo cp -r * /Applications/PomodoroGenie/
        sudo chown -R $(whoami):staff /Applications/PomodoroGenie
        
        # 创建启动脚本
        cat > /Applications/PomodoroGenie/start.sh << 'EOF2'
        #!/bin/bash
        cd /Applications/PomodoroGenie
        python3 -m http.server 3001 --bind 0.0.0.0
        EOF2
        chmod +x /Applications/PomodoroGenie/start.sh
        
        # 创建停止脚本
        cat > /Applications/PomodoroGenie/stop.sh << 'EOF2'
        #!/bin/bash
        pkill -f "python3 -m http.server 3001"
        EOF2
        chmod +x /Applications/PomodoroGenie/stop.sh
        
        echo "✅ Deployment complete!"
        echo "🚀 Start: /Applications/PomodoroGenie/start.sh"
        echo "🛑 Stop: /Applications/PomodoroGenie/stop.sh"
        echo "🌐 Access: http://localhost:3001"
        EOF
        chmod +x release/web/deploy.sh
        
        # 创建README
        cat > release/web/README.md << 'EOF'
        # PomodoroGenie Web App
        
        ## 🚀 Quick Start
        
        1. **Deploy**:
           ```bash
           ./deploy.sh
           ```
        
        2. **Start**:
           ```bash
           /Applications/PomodoroGenie/start.sh
           ```
        
        3. **Access**:
           - Local: http://localhost:3001
           - Network: http://[your-ip]:3001
        
        ## 📋 Features
        
        - ✅ Pomodoro Timer
        - ✅ Task Management
        - ✅ Statistics Dashboard
        - ✅ White Noise
        - ✅ Focus Mode
        - ✅ Cross-platform Support
        
        ## 🔧 System Requirements
        
        - Modern web browser
        - Python 3.7+ (for local server)
        - 2GB free disk space
        
        ## 📞 Support
        
        - GitHub Issues: https://github.com/your-username/pomodoro-genie/issues
        - Documentation: https://github.com/your-username/pomodoro-genie/wiki
        EOF
        
    - name: 📤 Upload Web Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-app-${{ github.ref_name }}
        path: release/web/
        retention-days: 90

  # 🍎 构建macOS应用
  build-macos:
    name: 🍎 Build macOS App
    runs-on: macos-latest
    needs: quality-gate
    if: ${{ needs.quality-gate.outputs.quality-passed == 'true' }}
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: 📦 Install dependencies
      run: |
        cd mobile
        flutter pub get
        
    - name: 🔧 Enable macOS desktop
      run: |
        cd mobile
        flutter config --enable-macos-desktop
        
    - name: 🔨 Build macOS App
      run: |
        cd mobile
        flutter build macos --release --dart-define=FLUTTER_WEB_USE_SKIA=false
        
    - name: 📦 Create macOS Package
      run: |
        mkdir -p release/macos
        APP_PATH="mobile/build/macos/Build/Products/Release/${APP_NAME}.app"
        
        if [ -d "$APP_PATH" ]; then
          cp -r "$APP_PATH" release/macos/
          
          # 创建DMG
          hdiutil create -volname "${APP_NAME}" \
            -srcfolder release/macos \
            -ov -format UDZO \
            release/macos/${APP_NAME}-${{ github.ref_name }}.dmg
            
          # 创建PKG安装包
          pkgbuild --root release/macos \
            --identifier com.pomodorogenie.app \
            --version ${{ github.ref_name }} \
            --install-location "/Applications" \
            release/macos/${APP_NAME}-${{ github.ref_name }}.pkg
            
          # 创建安装说明
          cat > release/macos/INSTALL.md << 'EOF'
          # PomodoroGenie macOS App Installation
          
          ## 📦 Installation Options
          
          ### Option 1: DMG Installation (Recommended)
          1. Double-click `PomodoroGenie-${{ github.ref_name }}.dmg`
          2. Drag `PomodoroGenie.app` to Applications folder
          3. Eject the DMG
          4. Launch from Applications folder
          
          ### Option 2: PKG Installation
          1. Double-click `PomodoroGenie-${{ github.ref_name }}.pkg`
          2. Follow the installation wizard
          3. Launch from Applications folder
          
          ### Option 3: Direct Installation
          1. Copy `PomodoroGenie.app` to `/Applications/`
          2. Double-click to run
          
          ## 🔒 Security Note
          
          If macOS shows a security warning:
          1. Go to System Preferences > Security & Privacy
          2. Click "Open Anyway" for PomodoroGenie
          
          ## 📋 System Requirements
          
          - macOS 10.15 (Catalina) or later
          - Intel or Apple Silicon processor
          - 4GB RAM minimum
          - 2GB free disk space
          
          ## 🚀 First Launch
          
          The app will start automatically after installation.
          Access it from Applications folder or Launchpad.
          
          ## 📞 Support
          
          - GitHub Issues: https://github.com/your-username/pomodoro-genie/issues
          - Documentation: https://github.com/your-username/pomodoro-genie/wiki
          EOF
          
        else
          echo "❌ macOS app build failed"
          exit 1
        fi
        
    - name: 📤 Upload macOS Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-app-${{ github.ref_name }}
        path: release/macos/
        retention-days: 90

  # 🚀 创建GitHub Release
  create-release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    needs: [build-web, build-macos]
    if: ${{ needs.build-web.result == 'success' && needs.build-macos.result == 'success' }}
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download Web artifacts
      uses: actions/download-artifact@v4
      with:
        name: web-app-${{ github.ref_name }}
        path: release/web/
        
    - name: 📥 Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: macos-app-${{ github.ref_name }}
        path: release/macos/
        
    - name: 🏷️ Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: PomodoroGenie ${{ github.ref_name }}
        body: |
          # 🍎 PomodoroGenie Release ${{ github.ref_name }}
          
          ## 📦 Downloads
          
          ### 🌐 Web Application
          - **File**: `web-app-${{ github.ref_name }}.zip`
          - **Type**: Flutter Web App
          - **Platform**: Cross-platform (Browser)
          - **Size**: ~$(du -sh release/web/ | cut -f1)
          
          ### 🍎 macOS Application
          - **File**: `macos-app-${{ github.ref_name }}.zip`
          - **Type**: Native macOS App
          - **Platform**: macOS 10.15+
          - **Size**: ~$(du -sh release/macos/ | cut -f1)
          
          ## 🚀 Quick Start
          
          ### Web App
          1. Extract the web-app archive
          2. Run `./deploy.sh`
          3. Access at http://localhost:3001
          
          ### macOS App
          1. Extract the macos-app archive
          2. Follow `INSTALL.md` instructions
          3. Launch from Applications folder
          
          ## 📋 Features
          
          - ✅ Pomodoro Timer with customizable durations
          - ✅ Task Management with priority levels
          - ✅ Statistics Dashboard with charts
          - ✅ White Noise for focus enhancement
          - ✅ Focus Mode with immersive experience
          - ✅ Cross-platform Support (Web + macOS)
          - ✅ Responsive Design for all screen sizes
          - ✅ Local Data Storage
          - ✅ Export/Import functionality
          
          ## 🔧 System Requirements
          
          ### Web App
          - Modern web browser (Chrome, Firefox, Safari, Edge)
          - Python 3.7+ (for local server)
          - 2GB free disk space
          
          ### macOS App
          - macOS 10.15 (Catalina) or later
          - Intel or Apple Silicon processor
          - 4GB RAM minimum
          - 2GB free disk space
          
          ## 🐛 Bug Fixes
          
          ${{ github.event.inputs.release_notes || 'Bug fixes and improvements' }}
          
          ## 📞 Support
          
          - **GitHub Issues**: [Create an issue](https://github.com/your-username/pomodoro-genie/issues)
          - **Documentation**: [View wiki](https://github.com/your-username/pomodoro-genie/wiki)
          - **Community**: [Join discussions](https://github.com/your-username/pomodoro-genie/discussions)
          
          ## 🔄 Update Instructions
          
          ### Web App
          1. Stop the current server
          2. Extract new files
          3. Run `./deploy.sh`
          4. Start the server
          
          ### macOS App
          1. Quit the current app
          2. Install new version
          3. Launch updated app
          
          ---
          
          **Full Changelog**: https://github.com/your-username/pomodoro-genie/compare/${{ github.event.before }}...${{ github.ref_name }}
        files: |
          release/web/web-app-${{ github.ref_name }}.zip
          release/macos/macos-app-${{ github.ref_name }}.zip
        draft: false
        prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}

  # 📊 发布后通知
  notify-release:
    name: 📊 Release Notification
    runs-on: ubuntu-latest
    needs: [create-release]
    if: always()
    steps:
    - name: 📊 Generate Release Summary
      run: |
        echo "## 🚀 Release ${{ github.ref_name }} Published!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Release Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Release Date**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 📋 Build Results" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.create-release.result }}" = "success" ]; then
          echo "✅ **Release Created**: Successfully published to GitHub" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Web App**: Available for download" >> $GITHUB_STEP_SUMMARY
          echo "✅ **macOS App**: Available for download" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Release Failed**: Check build logs for details" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
        echo "- **Release Page**: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Download**: https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Issues**: https://github.com/${{ github.repository }}/issues" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 🚀 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Test the release on target platforms" >> $GITHUB_STEP_SUMMARY
        echo "2. Update documentation if needed" >> $GITHUB_STEP_SUMMARY
        echo "3. Announce the release to users" >> $GITHUB_STEP_SUMMARY
        echo "4. Monitor for any issues" >> $GITHUB_STEP_SUMMARY
