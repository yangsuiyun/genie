version: '3.8'

services:
  # PostgreSQL Database - 使用官方镜像
  db:
    container_name: pomodoro_postgres_db
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - ./backend/migrations/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - pomodoro_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgREST API - REST接口
  rest:
    container_name: pomodoro_postgrest
    image: postgrest/postgrest:v12.0.2
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "54321:3000"
    environment:
      PGRST_DB_URI: postgres://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:54321
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: postgres
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_DB_USE_LEGACY_GUCS: "false"

  # pgAdmin - 数据库管理界面（替代Supabase Studio）
  pgadmin:
    container_name: pomodoro_pgadmin
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pomodoro.local
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy

  # Redis - 缓存和会话存储
  redis:
    container_name: pomodoro_redis
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx - 反向代理和静态文件服务
  nginx:
    container_name: pomodoro_nginx
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - rest
      - pgadmin
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  pomodoro_db_data:
  pgadmin_data:
  redis_data: