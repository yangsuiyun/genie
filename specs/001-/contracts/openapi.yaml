openapi: 3.0.3
info:
  title: Pomodoro Task Management API
  description: REST API for cross-platform Pomodoro task and time management application
  version: 1.0.0
servers:
  - url: https://api.pomodoro-app.com/v1
    description: Production server
  - url: http://localhost:3000/v1
    description: Development server

security:
  - BearerAuth: []

paths:
  # Authentication
  /auth/register:
    post:
      summary: Register new user account
      tags: [Authentication]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /auth/login:
    post:
      summary: Authenticate user
      tags: [Authentication]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  # Tasks
  /tasks:
    get:
      summary: List user tasks
      tags: [Tasks]
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: completed
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Tasks retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  total:
                    type: integer

    post:
      summary: Create new task
      tags: [Tasks]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title]
              properties:
                title:
                  type: string
                  maxLength: 200
                description:
                  type: string
                due_date:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{taskId}:
    put:
      summary: Update task
      tags: [Tasks]
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                is_completed:
                  type: boolean
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  # Pomodoro Sessions
  /pomodoro/sessions:
    post:
      summary: Start Pomodoro session
      tags: [Pomodoro]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [task_id, session_type, planned_duration]
              properties:
                task_id:
                  type: string
                  format: uuid
                session_type:
                  type: string
                  enum: [work, short_break, long_break]
                planned_duration:
                  type: integer
      responses:
        '201':
          description: Session started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PomodoroSession'

  /pomodoro/sessions/{sessionId}:
    put:
      summary: Update session status
      tags: [Pomodoro]
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [status]
              properties:
                status:
                  type: string
                  enum: [active, completed, interrupted, paused]
      responses:
        '200':
          description: Session updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PomodoroSession'

  # Reports
  /reports:
    get:
      summary: Generate productivity report
      tags: [Reports]
      parameters:
        - name: period_start
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: period_end
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Report generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        access_token:
          type: string
        expires_in:
          type: integer

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        preferences:
          type: object
        created_at:
          type: string
          format: date-time

    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        due_date:
          type: string
          format: date-time
        is_completed:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    PomodoroSession:
      type: object
      properties:
        id:
          type: string
          format: uuid
        task_id:
          type: string
          format: uuid
        started_at:
          type: string
          format: date-time
        planned_duration:
          type: integer
        session_type:
          type: string
          enum: [work, short_break, long_break]
        status:
          type: string
          enum: [active, completed, interrupted, paused]

    Report:
      type: object
      properties:
        sessions_completed:
          type: integer
        tasks_completed:
          type: integer
        total_focus_time:
          type: integer
        metrics:
          type: object